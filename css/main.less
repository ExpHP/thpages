@import "defs.less";

body {
  /* padding:0px 0 20px 0px;
  margin: 0px; */
  // font:14px/1.5 @sans-serif;
  font-family: @sans-serif;
  color: @text-color;
  font-weight: normal;
  background: #151515;
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'><g fill='%2300000080' fill-opacity='0.45'><path fill-rule='evenodd' d='M0 0h40v40H0V0zm40 40h40v40H40V40zm0-40h2l-2 2V0zm0 4l4-4h2l-6 6V4zm0 4l8-8h2L40 10V8zm0 4L52 0h2L40 14v-2zm0 4L56 0h2L40 18v-2zm0 4L60 0h2L40 22v-2zm0 4L64 0h2L40 26v-2zm0 4L68 0h2L40 30v-2zm0 4L72 0h2L40 34v-2zm0 4L76 0h2L40 38v-2zm0 4L80 0v2L42 40h-2zm4 0L80 4v2L46 40h-2zm4 0L80 8v2L50 40h-2zm4 0l28-28v2L54 40h-2zm4 0l24-24v2L58 40h-2zm4 0l20-20v2L62 40h-2zm4 0l16-16v2L66 40h-2zm4 0l12-12v2L70 40h-2zm4 0l8-8v2l-6 6h-2zm4 0l4-4v2l-2 2h-2z'/></g></svg>");
  background-attachment: fixed;
  margin: 0;
  line-height: 135%;
}

a {
  color: @link-color;
  text-decoration: none;
  &:hover { color: @link-color-hover; }
  // don't color self-links
  &.self-link {
    color: inherit;
    &:hover { color: inherit; }
  }
}

// workaround for things using onclick instead of href
a.clickable { cursor: pointer; }

.isref,
a code {
  color: mix(@text-color, @link-color, 65%);
}

// give non-ref tooltips a visual cue
.tip-deco {
  text-decoration: underline;
  text-decoration-style: dashed;
  -webkit-text-underline-position: under;
  text-underline-position: under;
}

body {
  // force scrollbar so that things don't change width when navigating between
  // pages that require one and pages that don't
  overflow-y: scroll;
}

code {
  background: @code-block-bg;
  font-family: @monospace;
  border-radius: 5px;
  display: inline;

  color: @code-color;
  padding: 4px 2px;
  margin-left: 0px;
  margin-right: 0px;

  // don't have double backgrounds for nested <code> (typically crossrefs in code)
  code {
    background: initial;
    font-family: @monospace;
    border-radius: initial;

    color: initial;
    padding: initial;
    margin-left: initial;
    margin-right: initial;
  }
}

li {
  margin-bottom: 0.5625em;
  margin-top: 0.5625em;
}

.toc li, // compress table of contents lists
.tip li // tip is smol, let lists fit better
{
  margin-bottom: 0px;
  margin-top: 0px;
}

blockquote {
  border: 1px dashed rgba(255, 255, 255, 0.3);
  border-radius: 8px;
  background: rgba(90, 155, 90, 0.2);
  padding: 5px;
}

@media screen and (max-width: 400px) {
  .header-wrapper {
    display: none;
  }
}

.body-container {
  width: 80%;
  margin-left: 10%;
  @media screen and (max-width: 750px) {
    width: 100%;
    margin-left: 0;
  }
}

.content-wrapper {
  margin-top: 10px;
  box-sizing: border-box;
  margin-bottom: 4em;
}

.content-wrapper .content {
  background: #ffffff0c;
  margin-top: 20px;
  border-radius: 25px;
  padding: 20px;
  transition: opacity .2s ease;
  overflow-x: auto;
}

// MD generates <pre><code></code></pre> for GHFM code fences
pre > code { display: block; }

.hljs, pre > code {
  font-family: @monospace;
  border: 2px solid #12121280;
  padding: 5px;
  background: @code-block-bg;
  overflow-x: auto;
  white-space: pre;
  margin: 10px;
}

table, th, td, tr {
  border: 1px solid #ffcc0060;
  border-collapse: collapse;
  padding: 5px;
}

tfoot {
  font-size: 0.9em;
  &, th, td, tr {
    border-left-style: hidden;
    border-right-style: hidden;
  }
  // move text closer to bottom border
  td { transform: translate(0, 3px); }
}

// Reset all styling done by MuiTooltip-tooltip (Material UI)
.tip {
  color: inherit;
  padding: inherit;
  font-size: inherit;
  max-width: inherit;
  word-wrap: inherit;
  font-family: inherit;
  font-weight: inherit;
  line-height: inherit;
  border-radius: inherit;
  background-color: inherit;
}

.tip {
  // position: absolute;
  // display: none;
  padding-left: 7px;
  padding-right: 7px;
  border: 1px gray solid;
  border-radius: 9px;
  background: @tip-bg-color;
  max-width: 320px;
  z-index: 100;
  font-size: 14px;

  // prevent a perfectly-placed pointer from making the tip flicker
  &, * {
    pointer-events: none;
  }

  // Put a hard limit on tip height even if we forget to curate a tip's content
  .contents {
    max-height: 10em;
    overflow-y: hidden;
    overflow-x: hidden; // otherwise overflow-y: hidden makes a horizontal scrollbar. Yes.
  }

  .heading {
    font-size: 1.1em;
    margin-top: 0.8em;
    margin-bottom: 0em;
  }

  .omitted-info {
    &::after {
      content: "See the table entry for more info.";
    }
    opacity: 0.75; // WARNING: Don't use percentages, they get bundled incorrectly
    font-size: 0.8em;
    font-style: italic;
    float: right;
    clear: right;
  }
}

.headless-table > table > thead {
  display: none;
}

// TODO: needs moar display: grid
.ins-table {
  // disable borders on THIS table only
  //
  // FIXME: this seems awfully delicate, maybe ins-table should be using divs with
  //        display: table etc. instead of an actual table
  &,
  >tbody >tr,
  >tbody >tr >td {
    border: none;
  }

  // (note: present on priw's site, uncertain of purpose...)
  * { box-sizing: border-box; }

  .col-name .ins-siggy-wrapper .punct { color: #ffffff30; }

  td { vertical-align: text-top; }

  // wide screen: table-like
  @media screen and (min-width: 601px) {
    display: table;
    width: 100%;
    .ins-table-entry { display: table-row; }
    .col-id { width: 3em; }
    .col-name { width: 20%; min-width: 10em; }
    .col-desc { width: 85%; }
  }

  // small screen: instruction and name as headers
  @media screen and (max-width: 600px) {
    display: block;
    >tbody { display: contents; }
    .ins-table-entry {
      display: block;
      white-space: nowrap; // prevent the name div itself from being wrapped to the line after the opcode number
      >* { white-space: initial; } // but allow text wrapping inside
    }
    .col-id { display: inline-block; margin-left: -1em; }
    .col-name { display: inline-block; }
    .col-desc { display: block; width: 100%; }
    // make headings closer to their content than to the previous item
    .col-desc >:first-child { margin-top: 0; }  // default was 1em
    .col-desc >:last-child { margin-bottom: 0.5em; }  // default was 1em
  }
}

.ins-siggy-wrapper {
  font-family: @monospace;

  text-indent: -2em;
  margin-left: 2em;

  .ins-name {
    &[data-wip="0"] { color: @text-color; }
    font-weight: bold;
    font-size: 1.1em;
  }

  .ins-params {
    font-size: 0.91em;
    // .type.mut { font-weight: bold; } // eh.
    .type.float { color: #32e875; }
    .type.int { color: #53ceff; }
    .type.string { color: #f382f3; }
    .type.unknown { color: @wip-2-color; }
  }
}

.var-header {
  font-family: @monospace;
  font-weight: bold;
  font-size: 1.1em;
}

[data-wip="1"] {
  color: @wip-1-color;
}
[data-wip="2"], .weak {
  color: @wip-2-color;
  code { color: @wip-2-color; }

  &:hover {
    color: @wip-2-color-hover;
    code { color: @wip-2-color-hover; }
  }
}

a.download::before {
  content: ' ';
  display: inline-block;
  position: relative;
  height: 1.2em;
  width: 1.2em;
  margin-right: 0.3em;
  margin-top: -0.2em;
  top: 0.3em;
  background-image: url("/img/download.svg");
  background-size: 1.2em 1.2em;
}

.error-box {
  margin-left: 10%;
  margin-right: 10%;
  background-color: #ff3c0034;
  border: dashed 1px #ff3c00a0;
  border-radius: 10px;
  padding: 10px;
}

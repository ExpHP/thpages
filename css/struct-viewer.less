@import "defs.less";

@span-border-radius: 5px;

.struct-nav .thing-selector + .thing-selector {
    // don't let the label and line overlap
    margin-top: 6px;
}

.struct-view.use-grid {
    display: grid;
    .row { display: contents; }
    .col-offset,
    .col-text {
        align-self: start;
        display: inline-block;
    }
    // .col-offset { justify-self: end; }
}

.struct-view.use-table {
    // display: flex;
    .row { display: flex; }
    .col-offset {
        flex-grow: 0;
    }
    .col-text {
        flex-grow: 1;
        justify-self: flex-start;
        // vertical-align: top;
        display: inline-block;
    }
    // .col-offset { text-align: right; }
}

.struct-view {
    font-family: @monospace;
    &:extend(.noselect);

    .keyword {
        color: rgb(237, 223, 179);
        font-weight: normal;
    }
    .number { color: rgb(162, 217, 175); }
    .type.primitive { color: rgb(162, 217, 175); }
    .type.user { color: rgb(142, 230, 237); }

    .type.user {
        display: inline-block;
    }
    a[href].type.user,
    a[href] > .type.user {
        // transition: background-color 0.25s;
        transition: background-color 0.1s;
        // make bg extend a little bit past the characters
        padding: 2px 0.5ch;
        margin: -2px -0.5ch;
        border-radius: @span-border-radius;
        &:hover {
            transition: background-color 0.2s;
            background-color: rgba(204, 204, 204, 0.1);
        }
    }

    .col-offset {
        white-space: pre;
    }

    .col-text > .col-text-flex {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: start;
        & > * { display: block; }
    }

    // hanging indent
    .col-text .col-text-wrapper {
        text-indent: -4ch;
        padding-left: 4ch;
        padding-right: 1ch;
        & > * { text-indent: 0; }
        // HACK: a workaround for rare instances where one row in the language-independent format
        //       wants to render multiple lines of text.  This enables the row to use <p>s inside
        //       its text column that each line receives the correction to remove the hanging indent.
        & > p {
            text-indent: -4ch;
            > * { text-indent: 0; }
            margin-block-start: 0;
            margin-block-end: 0;
        }
    }

    // get diff regions to highlight to end
    .col-text { justify-self: stretch; }

    .struct-name,
    .type.user { color: rgb(237, 189, 129); }
    .field-name { color: rgb(170, 214, 221); }
    .comment { color: #6e6e6e; }
    .field-offset-text {
        color: rgb(98, 202, 123);
        background-color: rgba(5, 70, 48, 0);
        padding: 2px;
        margin: -2px;
        border-radius: @span-border-radius;
        &:hover {
            background-color: rgba(25, 199, 141, 0.1);
        }
    }

    [data-side='left'].diff-oneside,
    [data-side='left'] .diff-oneside { background-color: rgba(255, 0, 0, 0.20); }
    [data-side='right'].diff-oneside,
    [data-side='right'] .diff-oneside { background-color: rgba(0, 255, 0, 0.175); }
    span.diff-oneside {
        display: inline-block; // fill whole line-height
    }

    .row {
        &:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
    }

    .expander {
        z-index: 1;
        position: absolute;
        display: inline-block;
        font-weight: bold;
        margin-left: -2ch;
        text-align: center;
        width: 4ch;
    }
    .expander::before {
        display: inline-block;
        font-weight: bold;
        vertical-align: middle;

        font-size: 0.7em;
        color: rgba(255, 255, 255, 0);
        transition:
            transform 0.2s ease-in-out,
            font-size 0.05s linear,
            color 0.2s linear
            ;
        content: ">";
    }
    .expander.expanded::before {
        transform: rotate(90deg);
        color: rgba(255, 255, 128, 0.3);
    }
    .row:hover .expander::before {
        // Make the font-color transition instantaneous when moving onto a row, so that
        // if the pointer quickly moves between rows, all of the expanders will briefly appear.
        // TODO: It would be easier to conditionally disable certain transitions
        //       if we had them on individual elements in a chain of nested spans...
        transition:
            transform 0.2s ease-in-out,
            font-size 0.05s linear
            ;
        color: rgba(255, 255, 60, 0.6);
    }
    .row:hover .expander:hover {
        cursor: pointer;
        &::before {
            font-size: 1.1em;
        }
    }
}

.noselect {
    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome, Edge, Opera and Firefox */
}
